package com.example.SpringJpaLearn.Repositories;import com.example.SpringJpaLearn.Models.Question;import com.example.SpringJpaLearn.Models.Quiz;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import org.springframework.data.domain.Sort;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.data.jpa.repository.Query;import org.springframework.data.repository.CrudRepository;import java.util.Date;import java.util.List;public interface QuizRepository extends JpaRepository<Quiz, Integer> {//    @Query("SELECT q FROM quiz_entity q WHERE lower(q.name) = lower(concat('%', ':name', '%') )")    List<Quiz> findAllByNameContainingIgnoreCase(String name);    @Query("SELECT q FROM quiz_entity q WHERE q.createDate = ?1")    List<Quiz> findAllByCreateDate(Date createDate);    // find list of quizzes contain name (ascending)    @Query("SELECT q FROM quiz_entity q WHERE LOWER(q.name) LIKE lower(concat('%', :name, '%')) ORDER BY q.name ASC")    List<Quiz> filterNameOrderByNameAsc(String name);    // or u can use//    List<Quiz> findByNameContainingIgnoreCaseOrderByNameAsc(String name);    // can add Distinct to get only unique result    // find list of quizzes contain name (descending) (distinct)    List<Quiz> findDistinctByNameContainingIgnoreCaseOrderByNameDesc(String name);    // find list of quizzes contain name (ascending create date)    List<Quiz> findByNameContainingIgnoreCaseOrderByCreateDateAsc(String name);    // find list of quizzes contain name (descending create date)//    @Query("select  q from quiz_entity q where q.name like %?1% order by q.createDate desc")//    List<Quiz> filternameOrderByCreateDateDesc(String name);    List<Quiz> findByNameContainingIgnoreCaseOrderByCreateDateDesc(String name);    // find list of quizzes having dates (ascending name)    List<Quiz> findByCreateDateOrderByNameAsc(Date createDate);    // find list of quizzes having dates (descending name)    List<Quiz> findByCreateDateOrderByNameDesc(Date createDate);    //pagination    Page<Quiz> findAll(Pageable pageable);}