package com.example.SpringJpaLearn.Service;import com.example.SpringJpaLearn.Models.Quiz;import com.example.SpringJpaLearn.Repositories.QuizRepository;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.HashMap;import java.util.List;@Servicepublic class QuizService {    @Autowired    private QuizRepository quizRepository;    SimpleDateFormat dateTimeFormat = new SimpleDateFormat("yyyy-MM-dd");    public void createQuiz(Quiz quiz) {        quizRepository.saveAndFlush(quiz);    }    public List<Quiz> findByName(String name) {        return quizRepository.findAllByNameContainingIgnoreCase(name);    }//    public List<Quiz> findByNameAsc(String name) {//        return quizRepository.filterNameOrderByNameAsc(name);////        return quizRepository.findByNameContainingIgnoreCaseOrderByNameAsc(name);//    }////    public List<Quiz> findByNameDesc(String name) {//        return quizRepository.findDistinctByNameContainingIgnoreCaseOrderByNameDesc(name);////        return quizRepository.findByNameContainingIgnoreCaseOrderByNameAsc(name);//    }////    public List<Quiz> findByNameAscDate(String name) {//        try {//            return quizRepository.findByNameContainingIgnoreCaseOrderByCreateDateAsc(name);//        } catch (Exception e) {//            return null;//        }//    }////    public List<Quiz> findByNameDescDate(String name) {//        try {//            return quizRepository.findByNameContainingIgnoreCaseOrderByCreateDateDesc(name);//        }//        catch (Exception e) { return null; }//    }    public List<Quiz> findByName(String name, String orderBy) {        try {            return switch (orderBy) {                case "asc-name" -> quizRepository.filterNameOrderByNameAsc(name);                case "desc-name" -> quizRepository.findDistinctByNameContainingIgnoreCaseOrderByNameDesc(name);                case "asc-date" -> quizRepository.findByNameContainingIgnoreCaseOrderByCreateDateAsc(name);                case "desc-date" -> quizRepository.findByNameContainingIgnoreCaseOrderByCreateDateDesc(name);                default -> null;            };        } catch (Exception e) {            return null;        }    }    public List<Quiz> findByCreateDate(String createDate) {        try {            return quizRepository.findAllByCreateDate(dateTimeFormat.parse(createDate));        } catch (ParseException e) {            System.out.println("----------------------------------");            System.out.println("Error: " + e.getMessage());            return null;        }    }//    public List<Quiz> findByCreateDateAscName(String createDate) {//        try {//            return quizRepository.findByCreateDateOrderByNameAsc(dateTimeFormat.parse(createDate));//        } catch (ParseException e) {//            System.out.println("Error: " + e.getMessage());//            return null;//        }//    }////    public List<Quiz> findByCreateDateDescName(String createDate) {//        try {//            return quizRepository.findByCreateDateOrderByNameDesc(dateTimeFormat.parse(createDate));//        } catch (ParseException e) {//            System.out.println("Error: " + e.getMessage());//            return null;//        }//    }    List<Quiz> findByCreateDate(String createDate, String orderBy) {        try {            return switch (orderBy) {                case "asc-name" -> quizRepository.findByCreateDateOrderByNameAsc(dateTimeFormat.parse(createDate));                case "desc-name" -> quizRepository.findByCreateDateOrderByNameDesc(dateTimeFormat.parse(createDate));                default -> null;            };        }        catch (ParseException e) {                return null;        }    }}